{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api'; // Update with your backend URL\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}); // Add a request interceptor to include the JWT token in headers\n\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization"],"sources":["C:/Users/mehat/Desktop/PMT/frontend/src/components/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api'; // Update with your backend URL\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include the JWT token in headers\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,2BAArB,C,CAAkD;;AAElD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EACvBC,OAAO,EAAEH,YADc;EAEvBI,OAAO,EAAE;IACP,gBAAgB;EADT;AAFc,CAAb,CAAZ,C,CAOA;;AACAH,GAAG,CAACI,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;EACA,IAAIF,KAAJ,EAAW;IACTD,MAAM,CAACJ,OAAP,CAAeQ,aAAf,GAAgC,UAASH,KAAM,EAA/C;EACD;;EACD,OAAOD,MAAP;AACD,CAND;AAQA,eAAeP,GAAf"},"metadata":{},"sourceType":"module"}